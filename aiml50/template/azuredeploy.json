{
	"$schema": "http://schema.management.azure.com/schemas/2018-05-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"event": {
			"type": "string",
			"defaultValue": "demo",
			"metadata": {
				"description": "The event or other identifier to create a unique environment."
			}
		},
		"sqlLogin": {
			"type": "string",
			"defaultValue": ""
		},
		"sqlPassword": {
			"type": "securestring",
			"defaultValue": ""
		},
		"repoUrl": {
			"type": "string",
			"defaultValue": "https://github.com/microsoft/TailwindTraders-Website"
		},
		"branch": {
			"type": "string",
			"defaultValue": "master"
		}
	},
	"variables": {
		"sessionCode": "aiml50",
		"event": "[toLower(parameters('event'))]",
		"uniqueName": "[concat(variables('sessionCode'), variables('event'))]",
		"friendlyName": "ML Workspace Containers AIML50",
		"location": "[resourceGroup().location]",
		"storageAccountName": "[concat(variables('uniqueName'), 'storage')]",
		"storageAccountType": "Standard_LRS",
		"keyVaultName": "[concat(variables('uniqueName'), 'vault')]",
		"containerRegistryName": "[concat(variables('uniqueName'), 'registry')]",
		"appInsightsNameML": "[concat(variables('uniqueName'), 'mlinsights')]",
		"machineLearningName": "[variables('uniqueName')]",
		"subscriptionId": "[subscription().id]",
		"hostingEnvironment": "",
		"hostingPlanName": "[concat(variables('uniqueName'), '-plan')]",
		"serverFarmResourceGroup": "[resourceGroup().name]",
		"alwaysOn": true,
		"sku": "PremiumV2",
		"skuCode": "P1v2",
		"workerSize": "3",
		"workerSizeId": "3",
		"numberOfWorkers": "1",
		"currentStack": "dotnetcore",
		"appInsightsNameWeb": "[concat(variables('uniqueName'),'webinsights')]",
		"sqlServerName": "[concat(variables('uniqueName'), '-sqlsvr')]",
		"sqlDatabaseName": "[concat(variables('uniqueName'), '-sqldb')]",
		"collation": "SQL_Latin1_General_CP1_CI_AS",
		"maxSizeBytes": 2147483648,
		"sampleName": "",
		"licenseType": "",
		"readScaleOut": "Disabled",
		"zoneRedundant": false,
		"numberOfReplicas": 0,
		"minCapacity": "",
		"autoPauseDelay": "",
		"sqlSkuName": "Basic",
		"sqlTier": "Basic",
		"locationCode": "[toLower(replace(variables('location'), ' ', ''))]",
		"apiUrl": "/api/v1",
		"apiUrlShoppingCart": "/api/v1",
		"cosmosAccountName": "[concat(variables('uniqueName'), '-mongo')]",
		"cosmosDatabaseName": "tailwind"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2018-07-01",
			"name": "[variables('storageAccountName')]",
			"location": "[variables('location')]",
			"sku": {
				"name": "[variables('storageAccountType')]"
			},
			"kind": "StorageV2",
			"properties": {
				"encryption": {
					"services": {
						"blob": {
							"enabled": true
						},
						"file": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"supportsHttpsTrafficOnly": true
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices",
			"apiVersion": "2019-04-01",
			"name": "[concat(variables('storageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
			],
			"properties": {
				"cors": {
					"corsRules": [
						{
							"allowedOrigins": [
								"https://mlworkspace.azure.ai",
								"https://ml.azure.com",
								"https://mlworkspacecanary.azure.ai",
								"https://mlworkspace.azureml-test.net"
							],
							"allowedMethods": [
								"GET",
								"HEAD"
							],
							"maxAgeInSeconds": 1800,
							"exposedHeaders": [
								"*"
							],
							"allowedHeaders": [
								"*"
							]
						}
					]
				},
				"deleteRetentionPolicy": {
					"enabled": false
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2019-04-01",
			"name": "[concat(variables('storageAccountName'), '/default/product-images')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
			],
			"properties": {
				"publicAccess": "None"
			}
		},
		{
			"type": "Microsoft.KeyVault/vaults",
			"apiVersion": "2016-10-01",
			"name": "[variables('keyVaultName')]",
			"location": "[variables('location')]",
			"properties": {
				"accessPolicies": [
				],
				"sku": {
					"name": "standard",
					"family": "A"
				},
				"tenantId": "[subscription().tenantId]"
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries",
			"apiVersion": "2017-10-01",
			"name": "[variables('containerRegistryName')]",
			"location": "[variables('location')]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"adminUserEnabled": true
			}
		},
		{
			"type": "Microsoft.Insights/components",
			"apiVersion": "2015-05-01",
			"name": "[variables('appInsightsNameML')]",
			"location": "[variables('location')]",
			"kind": "web",
			"properties": {
				"Application_Type": "web"
			}
		},
		{
			"type": "Microsoft.MachineLearningServices/workspaces",
			"apiVersion": "2018-11-19",
			"name": "[variables('machineLearningName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
				"[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
				"[resourceId('Microsoft.Insights/components', variables('appInsightsNameML'))]",
				"[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
			],
			"identity": {
				"type": "systemAssigned"
			},
			"properties": {
				"friendlyName": "[variables('friendlyName')]",
				"keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
				"applicationInsights": "[resourceId('Microsoft.Insights/components', variables('appInsightsNameML'))]",
				"containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
				"storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
				"description": "Machine Learning Pipelines for AIML50"
			}
		},
		{
			"apiVersion": "2018-02-01",
			"name": "[variables('uniqueName')]",
			"type": "Microsoft.Web/sites",
			"location": "[variables('location')]",
			"tags": {
			},
			"dependsOn": [
				"[concat('microsoft.insights/components/', variables('appInsightsNameWeb'))]",
				"[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
				"[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/databases/', variables('sqlDatabaseName'))]",
				"[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]",
				"[concat('Microsoft.CognitiveServices/accounts/', variables('uniqueName'))]"
			],
			"properties": {
				"name": "[variables('uniqueName')]",
				"siteConfig": {
					"appSettings": [
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(concat('microsoft.insights/components/', variables('appInsightsNameWeb')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "ApplicationInsightsAgent_EXTENSION_VERSION",
							"value": "~2"
						},
						{
							"name": "XDT_MicrosoftApplicationInsights_Mode",
							"value": "recommended"
						},
						{
							"name": "DiagnosticServices_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
							"value": "1.0.0"
						},
						{
							"name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
							"value": "1.0.0"
						},
						{
							"name": "InstrumentationEngine_EXTENSION_VERSION",
							"value": "~1"
						},
						{
							"name": "SnapshotDebugger_EXTENSION_VERSION",
							"value": "~1"
						},
						{
							"name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
							"value": "~1"
						},
						{
							"name": "WEBSITE_NODE_DEFAULT_VERSION",
							"value": "10.15.2"
						},
						{
							"name": "ApiUrl",
							"value": "[variables('apiUrl')]"
						},
						{
							"name": "ApiUrlShoppingCart",
							"value": "[variables('apiUrlShoppingCart')]"
						},
						{
							"name": "MongoConnectionString",
							"value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2015-04-08').connectionStrings[0].connectionString]"
						},
						{
							"name": "SqlConnectionString",
							"value": "[concat('Server=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', parameters('sqlLogin'), ';Password=', parameters('sqlPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
						},
						{
							"name": "productImagesUrl",
							"value": "https://raw.githubusercontent.com/microsoft/TailwindTraders-Backend/master/Deploy/tailwindtraders-images/product-detail"
						},
						{
							"name": "ImagePredictorEndpoint",
							"value": ""
						},
						{
							"name": "Personalizer__ApiKey",
							"value": ""
						},
						{
							"name": "Personalizer__Endpoint",
							"value": ""
						}
					],
					"metadata": [
						{
							"name": "CURRENT_STACK",
							"value": "[variables('currentStack')]"
						}
					],
					"alwaysOn": "[variables('alwaysOn')]"
				},
				"serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', variables('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
				"hostingEnvironment": "[variables('hostingEnvironment')]",
				"clientAffinityEnabled": true
			},
			"resources": [
				{
					"apiVersion": "2017-11-15-preview",
					"name": "web",
					"type": "sourcecontrols",
					"dependsOn": [
						"[resourceId('Microsoft.Web/Sites', variables('uniqueName'))]"
					],
					"properties": {
						"RepoUrl": "[parameters('repoURL')]",
						"branch": "[parameters('branch')]",
						"IsManualIntegration": true
					}
				}
			]
		},
		{
			"apiVersion": "2018-11-01",
			"name": "[variables('hostingPlanName')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[variables('location')]",
			"kind": "",
			"tags": {
			},
			"dependsOn": [
			],
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"workerSize": "[variables('workerSize')]",
				"workerSizeId": "[variables('workerSizeId')]",
				"numberOfWorkers": "[variables('numberOfWorkers')]",
				"hostingEnvironment": "[variables('hostingEnvironment')]"
			},
			"sku": {
				"Tier": "[variables('sku')]",
				"Name": "[variables('skuCode')]"
			}
		},
		{
			"apiVersion": "2015-05-01",
			"name": "[variables('appInsightsNameWeb')]",
			"type": "microsoft.insights/components",
			"location": "[variables('locationCode')]",
			"tags": null,
			"properties": {
				"ApplicationId": "[variables('uniqueName')]",
				"Request_Source": "IbizaWebAppExtensionCreate"
			}
		},
		{
			"apiVersion": "2018-06-01-preview",
			"location": "[variables('locationCode')]",
			"tags": {
			},
			"name": "[variables('sqlServerName')]",
			"properties": {
				"administratorLogin": "[parameters('sqlLogin')]",
				"administratorLoginPassword": "[parameters('sqlPassword')]",
				"version": "12.0"
			},
			"resources": [
				{
					"apiVersion": "2017-10-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
					],
					"location": "[variables('locationCode')]",
					"tags": {
					},
					"name": "[variables('sqlDatabaseName')]",
					"properties": {
						"collation": "[variables('collation')]",
						"maxSizeBytes": "[variables('maxSizeBytes')]",
						"sampleName": "[variables('sampleName')]",
						"zoneRedundant": "[variables('zoneRedundant')]",
						"licenseType": "[variables('licenseType')]",
						"readScale": "[variables('readScaleOut')]",
						"readReplicaCount": "[variables('numberOfReplicas')]",
						"minCapacity": "[variables('minCapacity')]",
						"autoPauseDelay": "[variables('autoPauseDelay')]"
					},
					"sku": {
						"name": "[variables('sqlSkuName')]",
						"tier": "[variables('sqlTier')]"
					},
					"type": "databases"
				},
				{
					"apiVersion": "2014-04-01-preview",
					"dependsOn": [
						"[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
					],
					"location": "[variables('locationCode')]",
					"name": "AllowAllWindowsAzureIps",
					"properties": {
						"endIpAddress": "0.0.0.0",
						"startIpAddress": "0.0.0.0"
					},
					"type": "firewallrules"
				}
			],
			"type": "Microsoft.Sql/servers"
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('cosmosAccountName')]",
			"apiVersion": "2018-02-01-preview",
			"location": "[variables('location')]",
			"kind": "MongoDB",
			"properties": {
				"databaseAccountOfferType": "Standard"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
			"name": "[concat(variables('cosmosAccountName'), '/mongodb/', variables('cosmosDatabaseName'))]",
			"apiVersion": "2018-02-01-preview",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]"
			],
			"properties": {
				"resource": {
					"id": "[variables('cosmosDatabaseName')]"
				}
			}
		},
		{
			"type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
			"name": "[concat(variables('cosmosAccountName'), '/mongodb/', variables('cosmosDatabaseName'), '/cart')]",
			"apiVersion": "2016-03-31",
			"dependsOn": [
				"[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosAccountName'), 'mongodb', variables('cosmosDatabaseName'))]"
			],
			"properties": {
				"resource": {
					"id": "cart",
					"shardKey": {
						"email": "Hash"
					}
				},
				"options": {
					"throughput": "400"
				}
			}
		},
		{
			"type": "Microsoft.CognitiveServices/accounts",
			"apiVersion": "2016-02-01-preview",
			"name": "[variables('uniqueName')]",
			"location": "westus2",
			"sku": {
				"name": "S0"
			},
			"kind": "Personalizer",
			"properties": {
			}
		}
	],
	"outputs": {
	}
}